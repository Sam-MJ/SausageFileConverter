name: build-MacOS-Silicon
on: [workflow_dispatch]
jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v4
      with:
        name: release_url
        path: release_url.txt

  build:
    env:
      APP_NAME: SausageFileConverter
      IN_FILE_NAME: app.py
      OUT_FILE_NAME: SausageFileConverter.zip
      ASSET_MIME: application/zip

    name: Build packages
    needs: createrelease
    runs-on: [macos-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install setuptools
        pip install -r requirements_mac.txt
    - name: Build with pyinstaller for MacOS_ARM64
      run: >
        Make mac &&
        cd dist/ &&
        zip -r9 ${{ env.APP_NAME}} ${{env.APP_NAME}}.app/
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v4
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ env.APP_NAME }}
        asset_name: ${{ env.OUT_FILE_NAME }}
        asset_content_type: ${{ env.ASSET_MIME }}
